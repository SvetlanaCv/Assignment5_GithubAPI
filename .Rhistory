#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "jtleek/datasharing", "created_at"]
save.image("C:\\a-trinity\\code\\SwEng\\r_code")
q()
getwd()
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "jtleek/datasharing", "created_at"]
save.image("C:\\a-trinity\\code\\SwEng\\R_code")
q()
gitDF[gitDF$full_name == "jtleek/datasharing", "created_at"]
print(gitDF)
gitDF[gitDF$full_name == "id"]
gitDF[gitDF$full_name == "id", "fork"]
list()
gitDF[gitDF$full_name == "jtleek/datasharing", "created_at"]
gitDF[gitDF$id]
gitDF[gitDF$id = "155565363"]
gitDF[gitDF$id = "155565363", "size"]
gitDF[gitDF$id = 155565363, "size"]
gitDF[gitDF$id == 155565363, "size"]
q()
gitDF[gitDF$id == 155565363]
gitDF[gitDF$id]
repos <- GET(url = paste0(url_git,'users/',username,'/repos'))
utils:::menuInstallLocal()
names(gitDF)
out<-list(json[[30]]$name, output[[30]]$created_at
out<-list(json[[30]]$name, output[[30]]$created_at)
out<-list(json1[[30]]$name, output[[30]]$created_at)
out<-list(json1[[30]]$name, json1[[30]]$created_at)
print(out)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/dipakkr/repos", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "dipakkr/datasharing", "created_at"]
#how to extract data by index and place into out
out<-list(json1[[30]]$name, json1[[30]]$created_at)
print(out)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/dipakkr/A-to-Z-Resources-for-Students/collaborators{/collaborator}", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "dipakkr/datasharing", "created_at"]
#how to extract data by index and place into out
out<-list(json1[[30]]$name, json1[[30]]$created_at)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/dipakkr/A-to-Z-Resources-for-Students/contributors", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "dipakkr/datasharing", "created_at"]
#how to extract data by index and place into out
out<-list(json1[[30]]$name, json1[[30]]$created_at)
print(out)
out<-list(json1[[30]]$login, json1[[30]]$contributions)
print(out)
utils:::menuInstallPkgs()
for(year in c(2010,2011,2012,2013,2014,2015)){print(paste(The year is ", year))}
for(year in c(2010,2011,2012,2013,2014,2015)){print(paste("The year is ", year))}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){print(list(json1[[i]]$login, json1[[i]]$contributions))}
save.image("C:\\a-trinity\\code\\SwEng\\R_code")
q()
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){print(list(json1[[i]]$login, json1[[i]]$contributions))}
file.create("data.txt")
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30))
{cat((list(json1[[i]]$login, json1[[i]]$contributions), "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){cat((list(json1[[i]]$login, json1[[i]]$contributions), "data.txt")}
out <- list(json1[[i]]$login, json1[[i]]$contributions)
print(out)
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- list(json1[[i]]$login, json1[[i]]$contributions) cat(out, "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- list(json1[[i]]$login, json1[[i]]$contributions); cat(out, "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- json1[[i]]$login, json1[[i]]$contributions); cat(out, "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- list(json1[[i]]$login, json1[[i]]$contributions); lapply(out, "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- json1[[i]]$login, json1[[i]]$contributions); cat(print(out), "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- list(json1[[i]]$login, json1[[i]]$contributions); cat(print(out), "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- json1[[i]]$login, json1[[i]]$contributions); cat(out[1], "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- list(json1[[i]]$login, json1[[i]]$contributions); cat(out[1], "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- list(json1[[i]]$login, json1[[i]]$contributions); a <- out[1]; cat(a, "data.txt")}
for(i in c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30)){out <- list(json1[[i]]$login, json1[[i]]$contributions); lapply(out, write, "data.txt", append=TRUE, ncolumns=2)}
save.image("C:\\a-trinity\\code\\SwEng\\Assignment5_GithubAPI\\Rcode")
q()
array2 = rep(0,30)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
#install.pakages("sunburstR")
library(sunburstR)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/dipakkr/A-to-Z-Resources-for-Students/contributors", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "dipakkr/datasharing", "created_at"]
#how to extract data by index and place into out
out<-list(json1[[30]]$login, json1[[30]]$contributions)
array1 = rep(0,30)
array2 = rep(0,30)
#add new data to file
for(i in c(1:30)){
out <- list(json1[[i]]$login, json1[[i]]$contributions)
array1[i] = gitDF$login
array2[i] = gitDF$contributions
}
matrix1 = as.matrix(cbind(array1, array2))
print(matrix1)
array1 = rep(0,30)
array2 = rep(0,30)
for(i in c(1:30)){
temp <- GET(paste(list(json1[[i]]$url)), gtoken)
stop_for_status(temp)
json2 = content(temp)
gitDF2 = jsonlite::fromJSON(jsonlite::toJSON(json2))
array1[i] = (gitDF2$public_repos)
array2[i] = (gitDF2$login)
}
matrix2 = as.matrix(cbind(array1, array2))
print(matrix2)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
#install.pakages("sunburstR")
library(sunburstR)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/dipakkr/A-to-Z-Resources-for-Students/contributors", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "dipakkr/datasharing", "created_at"]
#how to extract data by index and place into out
out<-list(json1[[30]]$login, json1[[30]]$contributions)
array1 = rep(0,30)
array2 = rep(0,30)
#add new data to file
for(i in c(1:30)){
out <- list(json1[[i]]$login, json1[[i]]$contributions)
array1[i] = json1[[i]]$login
array2[i] = json1[[i]]$contributions
}
matrix1 = as.matrix(cbind(array1, array2))
print(matrix1)
array1 = rep(0,30)
array2 = rep(0,30)
for(i in c(1:30)){
temp <- GET(paste(list(json1[[i]]$url)), gtoken)
stop_for_status(temp)
json2 = content(temp)
gitDF2 = jsonlite::fromJSON(jsonlite::toJSON(json2))
array1[i] = (gitDF2$public_repos)
array2[i] = (gitDF2$login)
}
matrix2 = as.matrix(cbind(array1, array2))
print(matrix2)
#install.packages("jsonlite")
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
#install.pakages("sunburstR")
library(sunburstR)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
myapp <- oauth_app(appname = "Assignment_5_Svetlana_Cvetic", key = "dc80d9f1d7a365bcad95", secret = "b333c9422fe2e927ef00e78ac18cae69af24d911")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/repos/dipakkr/A-to-Z-Resources-for-Students/contributors", gtoken)
# Take action on http error
stop_for_status(req)
# Extract content from a request
json1 = content(req)
# Convert to a data.frame
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
# Subset data.frame
gitDF[gitDF$full_name == "dipakkr/datasharing", "created_at"]
#how to extract data by index and place into out
out<-list(json1[[30]]$login, json1[[30]]$contributions)
array1 = rep(0,30)
array2 = rep(0,30)
#add new data to file
for(i in c(1:30)){
array1[i] = json1[[i]]$login
array2[i] = json1[[i]]$contributions
}
matrix1 = as.matrix(cbind(array1, array2))
#print(matrix1)
array1 = rep(0,30)
array2 = rep(0,30)
for(i in c(1:30)){
temp <- GET(paste(list(json1[[i]]$url)), gtoken)
stop_for_status(temp)
json2 = content(temp)
gitDF2 = jsonlite::fromJSON(jsonlite::toJSON(json2))
array1[i] = (gitDF2$public_repos)
array2[i] = (gitDF2$login)
}
matrix2 = as.matrix(cbind(array1, array2))
#print(matrix2)
